#include "Globals.h"
#include "Action.h"

D2Version GameVersion = D2Version::NONE;
int32_t FilterLevel = 6;
int32_t PingLevel = 6;
bool IsFilterDebug = false;
bool IsTxtDataLoaded = false;

//item type linker object.
#define ITEM_TYPE(STR, ENUM) { L#STR, static_cast<std::underlying_type_t<ItemType>>(ItemType::##ENUM##) }
std::unordered_map<std::wstring, int32_t> ItemTypes = {
	ITEM_TYPE(None, NONE_1),
	ITEM_TYPE(None, NONE_2),
	ITEM_TYPE(Shield, SHIELD),
	ITEM_TYPE(Armor, ARMOR),
	ITEM_TYPE(Gold, GOLD),
	ITEM_TYPE(Bow Quiver, BOW_QUIVER),
	ITEM_TYPE(Crossbow Quiver, CROSSBOW_QUIVER),
	ITEM_TYPE(Player Body Part, PLAYER_BODY_PART),
	ITEM_TYPE(Herb, HERB),
	ITEM_TYPE(Potion, POTION),
	ITEM_TYPE(Ring, RING),
	ITEM_TYPE(Elixir, ELIXIR),
	ITEM_TYPE(Amulet, AMULET),
	ITEM_TYPE(Charm, CHARM),
	ITEM_TYPE(Not Used, NONE_3),
	ITEM_TYPE(Boots, BOOTS),
	ITEM_TYPE(Gloves, GLOVES),
	ITEM_TYPE(Not Used, NONE_4),
	ITEM_TYPE(Book, BOOK),
	ITEM_TYPE(Belt, BELT),
	ITEM_TYPE(Gem, GEM),
	ITEM_TYPE(Torch, TORCH),
	ITEM_TYPE(Scroll, SCROLL),
	ITEM_TYPE(Not Used, NONE_5),
	ITEM_TYPE(Scepter, SCEPTER),
	ITEM_TYPE(Wand, WAND),
	ITEM_TYPE(Staff, STAFF),
	ITEM_TYPE(Bow, BOW),
	ITEM_TYPE(Axe, AXE),
	ITEM_TYPE(Club, CLUB),
	ITEM_TYPE(Sword, SWORD),
	ITEM_TYPE(Hammer, HAMMER),
	ITEM_TYPE(Knife, KNIFE),
	ITEM_TYPE(Spear, SPEAR),
	ITEM_TYPE(Polearm, POLEARM),
	ITEM_TYPE(Crossbow, CROSSBOW),
	ITEM_TYPE(Mace, MACE),
	ITEM_TYPE(Helm, HELM),
	ITEM_TYPE(Missile Potion, MISSILE_POTION),
	ITEM_TYPE(Quest, QUEST),
	ITEM_TYPE(Body Part, BODY_PART),
	ITEM_TYPE(Key, KEY),
	ITEM_TYPE(Throwing Knife, THROWING_KNIFE),
	ITEM_TYPE(Throwing Axe, THROWING_AXE),
	ITEM_TYPE(Javelin, JAVELIN),
	ITEM_TYPE(Weapon, WEAPON),
	ITEM_TYPE(Melee Weapon, MELEE_WEAPON),
	ITEM_TYPE(Missile Weapon, MISSILE_WEAPON),
	ITEM_TYPE(Thrown Weapon, THROWN_WEAPON),
	ITEM_TYPE(Combo Weapon, COMBO_WEAPON),
	ITEM_TYPE(Any Armor, ANY_ARMOR),
	ITEM_TYPE(Any Shield, ANY_SHIELD),
	ITEM_TYPE(Miscellaneous, MISCELLANEOUS),
	ITEM_TYPE(Socket Filler, SOCKET_FILLER),
	ITEM_TYPE(Second Hand, SECOND_HAND),
	ITEM_TYPE(Staves And Rods, STAVES_AND_RODS),
	ITEM_TYPE(Missile, MISSILE),
	ITEM_TYPE(Blunt, BLUNT),
	ITEM_TYPE(Jewel, JEWEL),
	ITEM_TYPE(Class Specific, CLASS_SPECIFIC),
	ITEM_TYPE(Amazon Item, AMAZON_ITEM),
	ITEM_TYPE(Barbarian Item, BARBARIAN_ITEM),
	ITEM_TYPE(Necromancer Item, NECROMANCER_ITEM),
	ITEM_TYPE(Paladin Item, PALADIN_ITEM),
	ITEM_TYPE(Sorceress Item, SORCERESS_ITEM),
	ITEM_TYPE(Assassin Item, ASSASSIN_ITEM),
	ITEM_TYPE(Druid Item, DRUID_ITEM),
	ITEM_TYPE(Hand to Hand, HAND_TO_HAND),
	ITEM_TYPE(Orb, ORB),
	ITEM_TYPE(Voodoo Heads, VOODOO_HEADS),
	ITEM_TYPE(Auric Shields, AURIC_SHIELDS),
	ITEM_TYPE(Primal Helm, PRIMAL_HELM),
	ITEM_TYPE(Pelt, PELT),
	ITEM_TYPE(Cloak, CLOAK),
	ITEM_TYPE(Rune, RUNE),
	ITEM_TYPE(Circlet, CIRCLET),
	ITEM_TYPE(Healing Potion, HEALING_POTION),
	ITEM_TYPE(Mana Potion, MANA_POTION),
	ITEM_TYPE(Rejuv Potion, REJUV_POTION),
	ITEM_TYPE(Stamina Potion, STAMINA_POTION),
	ITEM_TYPE(Antidote Potion, ANTIDOTE_POTION),
	ITEM_TYPE(Thawing Potion, THAWING_POTION),
	ITEM_TYPE(Small Charm, SMALL_CHARM),
	ITEM_TYPE(Medium Charm, MEDIUM_CHARM),
	ITEM_TYPE(Large Charm, LARGE_CHARM),
	ITEM_TYPE(Amazon Bow, AMAZON_BOW),
	ITEM_TYPE(Amazon Spear, AMAZON_SPEAR),
	ITEM_TYPE(Amazon Javelin, AMAZON_JAVELIN),
	ITEM_TYPE(Hand to Hand 2, HAND_TO_HAND_2),
	ITEM_TYPE(Magic Bow Quiv, MAGIC_BOW_QUIV),
	ITEM_TYPE(Magic Xbow Quiv, UNK),
	ITEM_TYPE(Chipped Gem, CHIPPED_GEM),
	ITEM_TYPE(Flawed Gem, FLAWED_GEM),
	ITEM_TYPE(Standard Gem, STANDARD_GEM),
	ITEM_TYPE(Flawless Gem, FLAWLESS_GEM),
	ITEM_TYPE(Perfect Gem, PERFECT_GEM),
	ITEM_TYPE(Amethyst, AMETHYST),
	ITEM_TYPE(Diamond, DIAMOND),
	ITEM_TYPE(Emerald, EMERALD),
	ITEM_TYPE(Ruby, RUBY),
	ITEM_TYPE(Sapphire, SAPPHIRE),
	ITEM_TYPE(Topaz, TOPAZ),
	ITEM_TYPE(Skull, SKULL),
};
#undef ITEM_TYPE

//custom strings that can be used for filtering stats
#define STAT(STR, STR2) { L#STR, L#STR2 }
std::unordered_map<std::wstring, std::wstring> CustomStats = {
	STAT("Defense", Stat(31)),
	STAT("Sockets", Stat(194)),
	STAT("Enhanced Damage", Stat(17)),
	STAT("Enhanced Defense", Stat(16)),
	STAT("Durability", Stat(75)),
	STAT("Fire Resist", Stat(39)),
	STAT("Cold Resist", Stat(43)),
	STAT("Lightning Resist", Stat(41)),
	STAT("Poison Resist", Stat(45)),
	STAT("Increased Attack Speed", Stat(93)),
	STAT("Faster Cast Rate", Stat(105)),
	STAT("Faster Hit Recovery", Stat(99)),
	STAT("Faster Run Walk", Stat(96)),
	STAT("Faster Block Rate", Stat(102)),
	STAT("Life", Stat(7)),
	STAT("Mana", Stat(9)),
	STAT("Required Level", Stat(92)),
	STAT("Magic Find", Stat(80)),
	STAT("Gold Find", Stat(79)),
	STAT("Strength", Stat(0)),
	STAT("Dexterity", Stat(2)),
	STAT("Vitality", Stat(3)),
	STAT("Energy", Stat(1)),
	STAT("Mana After Each Kill", Stat(138)),
	STAT("Attack Rating", Stat(19)),
	STAT("Minimum Damage", Stat(21)),
	STAT("Maximum Damage", Stat(22)),
	STAT("Repairs Durability", Stat(252)),
	STAT("All Resist", MinIn(Stat(39),Stat(43),Stat(41),Stat(45))),
	STAT("Any Resist", Max(Stat(39),Stat(43),Stat(41),Stat(45))),
	STAT("Amazon Skills", Stat(83,0)),
	STAT("Amazon +%d to Bow and Crossbow Skills", Stat(188,0)),
	STAT("Amazon +%d to Passive and Magic Skills", Stat(188,1)),
	STAT("Amazon +%d to Javelin and Spear Skills", Stat(188,2)),
	STAT("Sorceress Skills", Stat(83,1)),
	STAT("Sorceress +%d to Fire Skills", Stat(188,8)),
	STAT("Sorceress +%d to Lightning Skills", Stat(188,9)),
	STAT("Sorceress +%d to Cold Skills", Stat(188,10)),
	STAT("Necromancer Skills", Stat(83,2)),
	STAT("Necromancer +%d to Curses", Stat(188,16)),
	STAT("Necromancer +%d to Poison and Bone Skills", Stat(188,17)),
	STAT("Necromancer +%d to Summoning Skills", Stat(188,18)),
	STAT("Paladin Skills", Stat(83,3)),
	STAT("Paladin +%d to Combat Skills", Stat(188,24)),
	STAT("Paladin +%d to Offensive Auras", Stat(188,33)),
	STAT("Paladin +%d to Defensive Auras", Stat(188,26)),
	STAT("Barbarian Skills", Stat(83,4)),
	STAT("Barbarian +%d to Combat Skills", Stat(188,32)),
	STAT("Barbarian +%d to Masteries", Stat(188,33)),
	STAT("Barbarian +%d to Warcries", Stat(188,34)),
	STAT("Druid Skills", Stat(83,5)),
	STAT("Druid +%d to Summoning Skills", Stat(188,40)),
	STAT("Druid +%d to Shape Shifting Skills", Stat(188,41)),
	STAT("Druid +%d to Elemental Skills", Stat(188,42)),
	STAT("Assassin Skills", Stat(83,6)),
	STAT("Assassin +%d to Traps", Stat(188,48)),
	STAT("Assassin +%d to Shadow Disciplines", Stat(188,49)),
	STAT("Assassin +%d to Martial Arts", Stat(188,50)),
	STAT("Attack", Stat(107,0)),
	STAT("Kick", Stat(107,1)),
	STAT("Throw", Stat(107,2)),
	STAT("Unsummon", Stat(107,3)),
	STAT("Left Hand Throw", Stat(107,4)),
	STAT("Left Hand Swing", Stat(107,5)),
	STAT("Magic Arrow", Stat(107,6)),
	STAT("Fire Arrow", Stat(107,7)),
	STAT("Inner Sight", Stat(107,8)),
	STAT("Critical Strike", Stat(107,9)),
	STAT("Jab", Stat(107,10)),
	STAT("Cold Arrow", Stat(107,11)),
	STAT("Multiple Shot", Stat(107,12)),
	STAT("Dodge", Stat(107,13)),
	STAT("Power Strike", Stat(107,14)),
	STAT("Poison Javelin", Stat(107,15)),
	STAT("Exploding Arrow", Stat(107,16)),
	STAT("Slow Missiles", Stat(107,17)),
	STAT("Avoid", Stat(107,18)),
	STAT("Impale", Stat(107,19)),
	STAT("Lightning Bolt", Stat(107,20)),
	STAT("Ice Arrow", Stat(107,21)),
	STAT("Guided Arrow", Stat(107,22)),
	STAT("Penetrate", Stat(107,23)),
	STAT("Charged Strike", Stat(107,24)),
	STAT("Plague Javelin", Stat(107,25)),
	STAT("Strafe", Stat(107,26)),
	STAT("Immolation Arrow", Stat(107,27)),
	STAT("Dopplezon", Stat(107,28)),
	STAT("Evade", Stat(107,29)),
	STAT("Fend", Stat(107,30)),
	STAT("Freezing Arrow", Stat(107,31)),
	STAT("Valkyrie", Stat(107,32)),
	STAT("Pierce", Stat(107,33)),
	STAT("Lightning Strike", Stat(107,34)),
	STAT("Lightning Fury", Stat(107,35)),
	STAT("Fire Bolt", Stat(107,36)),
	STAT("Warmth", Stat(107,37)),
	STAT("Charged Bolt", Stat(107,38)),
	STAT("Ice Bolt", Stat(107,39)),
	STAT("Frozen Armor", Stat(107,40)),
	STAT("Inferno", Stat(107,41)),
	STAT("Static Field", Stat(107,42)),
	STAT("Telekinesis", Stat(107,43)),
	STAT("Frost Nova", Stat(107,44)),
	STAT("Ice Blast", Stat(107,45)),
	STAT("Blaze", Stat(107,46)),
	STAT("Fire Ball", Stat(107,47)),
	STAT("Nova", Stat(107,48)),
	STAT("Lightning", Stat(107,49)),
	STAT("Shiver Armor", Stat(107,50)),
	STAT("Fire Wall", Stat(107,51)),
	STAT("Enchant", Stat(107,52)),
	STAT("Chain Lightning", Stat(107,53)),
	STAT("Teleport", Stat(107,54)),
	STAT("Glacial Spike", Stat(107,55)),
	STAT("Meteor", Stat(107,56)),
	STAT("Thunder Storm", Stat(107,57)),
	STAT("Energy Shield", Stat(107,58)),
	STAT("Blizzard", Stat(107,59)),
	STAT("Chilling Armor", Stat(107,60)),
	STAT("Fire Mastery", Stat(107,61)),
	STAT("Hydra", Stat(107,62)),
	STAT("Lightning Mastery", Stat(107,63)),
	STAT("Frozen Orb", Stat(107,64)),
	STAT("Cold Mastery", Stat(107,65)),
	STAT("Amplify Damage", Stat(107,66)),
	STAT("Teeth", Stat(107,67)),
	STAT("Bone Armor", Stat(107,68)),
	STAT("Skeleton Mastery", Stat(107,69)),
	STAT("Raise Skeleton", Stat(107,70)),
	STAT("Dim Vision", Stat(107,71)),
	STAT("Weaken", Stat(107,72)),
	STAT("Poison Dagger", Stat(107,73)),
	STAT("Corpse Explosion", Stat(107,74)),
	STAT("Clay Golem", Stat(107,75)),
	STAT("Iron Maiden", Stat(107,76)),
	STAT("Terror", Stat(107,77)),
	STAT("Bone Wall", Stat(107,78)),
	STAT("Golem Mastery", Stat(107,79)),
	STAT("Raise Skeletal Mage", Stat(107,80)),
	STAT("Confuse", Stat(107,81)),
	STAT("Life Tap", Stat(107,82)),
	STAT("Poison Explosion", Stat(107,83)),
	STAT("Bone Spear", Stat(107,84)),
	STAT("BloodGolem", Stat(107,85)),
	STAT("Attract", Stat(107,86)),
	STAT("Decrepify", Stat(107,87)),
	STAT("Bone Prison", Stat(107,88)),
	STAT("Summon Resist", Stat(107,89)),
	STAT("IronGolem", Stat(107,90)),
	STAT("Lower Resist", Stat(107,91)),
	STAT("Poison Nova", Stat(107,92)),
	STAT("Bone Spirit", Stat(107,93)),
	STAT("FireGolem", Stat(107,94)),
	STAT("Revive", Stat(107,95)),
	STAT("Sacrifice", Stat(107,96)),
	STAT("Smite", Stat(107,97)),
	STAT("Might", Stat(107,98)),
	STAT("Prayer", Stat(107,99)),
	STAT("Resist Fire", Stat(107,100)),
	STAT("Holy Bolt", Stat(107,101)),
	STAT("Holy Fire", Stat(107,102)),
	STAT("Thorns", Stat(107,103)),
	STAT("Defiance", Stat(107,104)),
	STAT("Resist Cold", Stat(107,105)),
	STAT("Zeal", Stat(107,106)),
	STAT("Charge", Stat(107,107)),
	STAT("Blessed Aim", Stat(107,108)),
	STAT("Cleansing", Stat(107,109)),
	STAT("Resist Lightning", Stat(107,110)),
	STAT("Vengeance", Stat(107,111)),
	STAT("Blessed Hammer", Stat(107,112)),
	STAT("Concentration", Stat(107,113)),
	STAT("Holy Freeze", Stat(107,114)),
	STAT("Vigor", Stat(107,115)),
	STAT("Conversion", Stat(107,116)),
	STAT("Holy Shield", Stat(107,117)),
	STAT("Holy Shock", Stat(107,118)),
	STAT("Sanctuary", Stat(107,119)),
	STAT("Meditation", Stat(107,120)),
	STAT("Fist of the Heavens", Stat(107,121)),
	STAT("Fanaticism", Stat(107,122)),
	STAT("Conviction", Stat(107,123)),
	STAT("Redemption", Stat(107,124)),
	STAT("Salvation", Stat(107,125)),
	STAT("Bash", Stat(107,126)),
	STAT("Sword Mastery", Stat(107,127)),
	STAT("Axe Mastery", Stat(107,128)),
	STAT("Mace Mastery", Stat(107,129)),
	STAT("Howl", Stat(107,130)),
	STAT("Find Potion", Stat(107,131)),
	STAT("Leap", Stat(107,132)),
	STAT("Double Swing", Stat(107,133)),
	STAT("Pole Arm Mastery", Stat(107,134)),
	STAT("Throwing Mastery", Stat(107,135)),
	STAT("Spear Mastery", Stat(107,136)),
	STAT("Taunt", Stat(107,137)),
	STAT("Shout", Stat(107,138)),
	STAT("Stun", Stat(107,139)),
	STAT("Double Throw", Stat(107,140)),
	STAT("Increased Stamina", Stat(107,141)),
	STAT("Find Item", Stat(107,142)),
	STAT("Leap Attack", Stat(107,143)),
	STAT("Concentrate", Stat(107,144)),
	STAT("Iron Skin", Stat(107,145)),
	STAT("Battle Cry", Stat(107,146)),
	STAT("Frenzy", Stat(107,147)),
	STAT("Increased Speed", Stat(107,148)),
	STAT("Battle Orders", Stat(107,149)),
	STAT("Grim Ward", Stat(107,150)),
	STAT("Whirlwind", Stat(107,151)),
	STAT("Berserk", Stat(107,152)),
	STAT("Natural Resistance", Stat(107,153)),
	STAT("War Cry", Stat(107,154)),
	STAT("Battle Command", Stat(107,155)),
	STAT("Fire Hit", Stat(107,156)),
	STAT("UnHolyBolt", Stat(107,157)),
	STAT("SkeletonRaise", Stat(107,158)),
	STAT("MaggotEgg", Stat(107,159)),
	STAT("ShamanFire", Stat(107,160)),
	STAT("MagottUp", Stat(107,161)),
	STAT("MagottDown", Stat(107,162)),
	STAT("MagottLay", Stat(107,163)),
	STAT("AndrialSpray", Stat(107,164)),
	STAT("Jump", Stat(107,165)),
	STAT("Swarm Move", Stat(107,166)),
	STAT("Nest", Stat(107,167)),
	STAT("Quick Strike", Stat(107,168)),
	STAT("VampireFireball", Stat(107,169)),
	STAT("VampireFirewall", Stat(107,170)),
	STAT("VampireMeteor", Stat(107,171)),
	STAT("GargoyleTrap", Stat(107,172)),
	STAT("SpiderLay", Stat(107,173)),
	STAT("VampireHeal", Stat(107,174)),
	STAT("VampireRaise", Stat(107,175)),
	STAT("Submerge", Stat(107,176)),
	STAT("FetishAura", Stat(107,177)),
	STAT("FetishInferno", Stat(107,178)),
	STAT("ZakarumHeal", Stat(107,179)),
	STAT("Emerge", Stat(107,180)),
	STAT("Resurrect", Stat(107,181)),
	STAT("Bestow", Stat(107,182)),
	STAT("MissileSkill1", Stat(107,183)),
	STAT("MonTeleport", Stat(107,184)),
	STAT("PrimeLightning", Stat(107,185)),
	STAT("PrimeBolt", Stat(107,186)),
	STAT("PrimeBlaze", Stat(107,187)),
	STAT("PrimeFirewall", Stat(107,188)),
	STAT("PrimeSpike", Stat(107,189)),
	STAT("PrimeIceNova", Stat(107,190)),
	STAT("PrimePoisonball", Stat(107,191)),
	STAT("PrimePoisonNova", Stat(107,192)),
	STAT("DiabLight", Stat(107,193)),
	STAT("DiabCold", Stat(107,194)),
	STAT("DiabFire", Stat(107,195)),
	STAT("FingerMageSpider", Stat(107,196)),
	STAT("DiabWall", Stat(107,197)),
	STAT("DiabRun", Stat(107,198)),
	STAT("DiabPrison", Stat(107,199)),
	STAT("PoisonBallTrap", Stat(107,200)),
	STAT("AndyPoisonBolt", Stat(107,201)),
	STAT("HireableMissile", Stat(107,202)),
	STAT("DesertTurret", Stat(107,203)),
	STAT("ArcaneTower", Stat(107,204)),
	STAT("MonBlizzard", Stat(107,205)),
	STAT("Mosquito", Stat(107,206)),
	STAT("CursedBallTrapRight", Stat(107,207)),
	STAT("CursedBallTrapLeft", Stat(107,208)),
	STAT("MonFrozenArmor", Stat(107,209)),
	STAT("MonBoneArmor", Stat(107,210)),
	STAT("MonBoneSpirit", Stat(107,211)),
	STAT("MonCurseCast", Stat(107,212)),
	STAT("HellMeteor", Stat(107,213)),
	STAT("RegurgitatorEat", Stat(107,214)),
	STAT("MonFrenzy", Stat(107,215)),
	STAT("QueenDeath", Stat(107,216)),
	STAT("Scroll of Identify", Stat(107,217)),
	STAT("Book of Identify", Stat(107,218)),
	STAT("Scroll of Townportal", Stat(107,219)),
	STAT("Book of Townportal", Stat(107,220)),
	STAT("Raven", Stat(107,221)),
	STAT("Plague Poppy", Stat(107,222)),
	STAT("Wearwolf", Stat(107,223)),
	STAT("Shape Shifting", Stat(107,224)),
	STAT("Firestorm", Stat(107,225)),
	STAT("Oak Sage", Stat(107,226)),
	STAT("Summon Spirit Wolf", Stat(107,227)),
	STAT("Wearbear", Stat(107,228)),
	STAT("Molten Boulder", Stat(107,229)),
	STAT("Arctic Blast", Stat(107,230)),
	STAT("Cycle of Life", Stat(107,231)),
	STAT("Feral Rage", Stat(107,232)),
	STAT("Maul", Stat(107,233)),
	STAT("Eruption", Stat(107,234)),
	STAT("Cyclone Armor", Stat(107,235)),
	STAT("Heart of Wolverine", Stat(107,236)),
	STAT("Summon Fenris", Stat(107,237)),
	STAT("Rabies", Stat(107,238)),
	STAT("Fire Claws", Stat(107,239)),
	STAT("Twister", Stat(107,240)),
	STAT("Vines", Stat(107,241)),
	STAT("Hunger", Stat(107,242)),
	STAT("Shock Wave", Stat(107,243)),
	STAT("Volcano", Stat(107,244)),
	STAT("Tornado", Stat(107,245)),
	STAT("Spirit of Barbs", Stat(107,246)),
	STAT("Summon Grizzly", Stat(107,247)),
	STAT("Fury", Stat(107,248)),
	STAT("Armageddon", Stat(107,249)),
	STAT("Hurricane", Stat(107,250)),
	STAT("Fire Trauma", Stat(107,251)),
	STAT("Claw Mastery", Stat(107,252)),
	STAT("Psychic Hammer", Stat(107,253)),
	STAT("Tiger Strike", Stat(107,254)),
	STAT("Dragon Talon", Stat(107,255)),
	STAT("Shock Field", Stat(107,256)),
	STAT("Blade Sentinel", Stat(107,257)),
	STAT("Quickness", Stat(107,258)),
	STAT("Fists of Fire", Stat(107,259)),
	STAT("Dragon Claw", Stat(107,260)),
	STAT("Charged Bolt Sentry", Stat(107,261)),
	STAT("Wake of Fire Sentry", Stat(107,262)),
	STAT("Weapon Block", Stat(107,263)),
	STAT("Cloak of Shadows", Stat(107,264)),
	STAT("Cobra Strike", Stat(107,265)),
	STAT("Blade Fury", Stat(107,266)),
	STAT("Fade", Stat(107,267)),
	STAT("Shadow Warrior", Stat(107,268)),
	STAT("Claws of Thunder", Stat(107,269)),
	STAT("Dragon Tail", Stat(107,270)),
	STAT("Lightning Sentry", Stat(107,271)),
	STAT("Inferno Sentry", Stat(107,272)),
	STAT("Mind Blast", Stat(107,273)),
	STAT("Blades of Ice", Stat(107,274)),
	STAT("Dragon Flight", Stat(107,275)),
	STAT("Death Sentry", Stat(107,276)),
	STAT("Blade Shield", Stat(107,277)),
	STAT("Venom", Stat(107,278)),
	STAT("Shadow Master", Stat(107,279)),
	STAT("Royal Strike", Stat(107,280)),
	STAT("Wake Of Destruction Sentry", Stat(107,281)),
	STAT("Imp Inferno", Stat(107,282)),
	STAT("Imp Fireball", Stat(107,283)),
	STAT("Baal Taunt", Stat(107,284)),
	STAT("Baal Corpse Explode", Stat(107,285)),
	STAT("Baal Monster Spawn", Stat(107,286)),
	STAT("Catapult Charged Ball", Stat(107,287)),
	STAT("Catapult Spike Ball", Stat(107,288)),
	STAT("Suck Blood", Stat(107,289)),
	STAT("Cry Help", Stat(107,290)),
	STAT("Healing Vortex", Stat(107,291)),
	STAT("Teleport 2", Stat(107,292)),
	STAT("Self-resurrect", Stat(107,293)),
	STAT("Vine Attack", Stat(107,294)),
	STAT("Overseer Whip", Stat(107,295)),
	STAT("Barbs Aura", Stat(107,296)),
	STAT("Wolverine Aura", Stat(107,297)),
	STAT("Oak Sage Aura", Stat(107,298)),
	STAT("Imp Fire Missile", Stat(107,299)),
	STAT("Impregnate", Stat(107,300)),
	STAT("Siege Beast Stomp", Stat(107,301)),
	STAT("MinionSpawner", Stat(107,302)),
	STAT("CatapultBlizzard", Stat(107,303)),
	STAT("CatapultPlague", Stat(107,304)),
	STAT("CatapultMeteor", Stat(107,305)),
	STAT("BoltSentry", Stat(107,306)),
	STAT("CorpseCycler", Stat(107,307)),
	STAT("DeathMaul", Stat(107,308)),
	STAT("Defense Curse", Stat(107,309)),
	STAT("Blood Mana", Stat(107,310)),
	STAT("mon inferno sentry", Stat(107,311)),
	STAT("mon death sentry", Stat(107,312)),
	STAT("sentry lightning", Stat(107,313)),
	STAT("fenris rage", Stat(107,314)),
	STAT("Baal Tentacle", Stat(107,315)),
	STAT("Baal Nova", Stat(107,316)),
	STAT("Baal Inferno", Stat(107,317)),
	STAT("Baal Cold Missiles", Stat(107,318)),
	STAT("MegademonInferno", Stat(107,319)),
	STAT("EvilHutSpawner", Stat(107,320)),
	STAT("CountessFirewall", Stat(107,321)),
	STAT("ImpBolt", Stat(107,322)),
	STAT("Horror Arctic Blast", Stat(107,323)),
	STAT("death sentry ltng", Stat(107,324)),
	STAT("VineCycler", Stat(107,325)),
	STAT("BearSmite", Stat(107,326)),
	STAT("Resurrect2", Stat(107,327)),
	STAT("BloodLordFrenzy", Stat(107,328)),
	STAT("Baal Teleport", Stat(107,329)),
	STAT("Imp Teleport", Stat(107,330)),
	STAT("Baal Clone Teleport", Stat(107,331)),
	STAT("ZakarumLightning", Stat(107,332)),
	STAT("VampireMissile", Stat(107,333)),
	STAT("MephistoMissile", Stat(107,334)),
	STAT("DoomKnightMissile", Stat(107,335)),
	STAT("RogueMissile", Stat(107,336)),
	STAT("HydraMissile", Stat(107,337)),
	STAT("NecromageMissile", Stat(107,338)),
	STAT("MonBow", Stat(107,339)),
	STAT("MonFireArrow", Stat(107,340)),
	STAT("MonColdArrow", Stat(107,341)),
	STAT("MonExplodingArrow", Stat(107,342)),
	STAT("MonFreezingArrow", Stat(107,343)),
	STAT("MonPowerStrike", Stat(107,344)),
	STAT("SuccubusBolt", Stat(107,345)),
	STAT("MephFrostNova", Stat(107,346)),
	STAT("MonIceSpear", Stat(107,347)),
	STAT("ShamanIce", Stat(107,348)),
	STAT("Diablogeddon", Stat(107,349)),
	STAT("Delerium Change", Stat(107,350)),
	STAT("NihlathakCorpseExplosion", Stat(107,351)),
	STAT("SerpentCharge", Stat(107,352)),
	STAT("Trap Nova", Stat(107,353)),
	STAT("UnHolyBoltEx", Stat(107,354)),
	STAT("ShamanFireEx", Stat(107,355)),
	STAT("Imp Fire Missile Ex", Stat(107,356)),
	STAT("Interact", Stat(107,357)),
	STAT("Loot", Stat(107,358)),
	STAT("TownPortal", Stat(107,359))
};
#undef STAT

#define KV(STR, IDX) { L#STR, ##IDX## }
std::unordered_map<std::wstring, int32_t> Rarities = {
		KV(None, 0), KV(Inferior, 1), KV(Normal, 2),
		KV(Superior, 3), KV(Magic, 4), KV(Set, 5), KV(Rare, 6),
		KV(Unique, 7), KV(Crafted, 8), KV(Tempered, 9)
};

std::unordered_map<std::wstring, int32_t> Qualities = {
	KV(None, -1), KV(Normal, 0), KV(Exceptional, 1), KV(Elite, 2)
};
#undef KV

template<typename K, typename V>
static std::unordered_map<V, K> reverse_map(const std::unordered_map<K, V>& m) {
	std::unordered_map<V, K> r;
	for (const auto& kv : m)
		r[kv.second] = kv.first;
	return r;
}

std::unordered_map<int32_t, std::wstring> ItemTypesLookup = reverse_map(ItemTypes);
std::unordered_map<int32_t, std::wstring> RaritiesLookup = reverse_map(Rarities);
std::unordered_map<int32_t, std::wstring> QualitiesLookup = reverse_map(Qualities);