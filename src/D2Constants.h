#pragma once

#include <Windows.h>
#include <cstdint>
#include <sstream>

#define TEXT_WHITE L"\xff" "c0"
#define TEXT_RED L"\xff" "c1"
#define TEXT_GREEN L"\xff" "c2"
#define TEXT_BLUE L"\xff" "c3"
#define TEXT_GOLD L"\xff" "c4"
#define TEXT_GRAY L"\xff" "c5"
#define TEXT_BLACK L"\xff" "c6"
#define TEXT_TAN L"\xff" "c7"
#define TEXT_ORANGE L"\xff" "c8"
#define TEXT_YELLOW L"\xff" "c9"
#define TEXT_PURPLE L"\xff" "c;"
#define TEXT_DARK_GREEN L"\xff" "c:"
#define TEXT_CORAL L"\xff" "0" "\x06"
#define TEXT_SAGE L"\xff" "0" "\x07"
#define TEXT_TEAL L"\xff" "0" "\x09"
#define TEXT_LIGHT_GRAY L"\xff" "0" "\x0c"

template<typename Enum,
	typename = std::enable_if_t<std::is_enum_v<Enum>>>
	std::ostream& operator<< (std::ostream& out, Enum e) {
	return out << static_cast<int>(e);
}

template<typename Enum,
	typename = std::enable_if_t<std::is_enum_v<Enum>>>
	std::wostream& operator<< (std::wostream& out, Enum e) {
	return out << static_cast<int>(e);
}

//user defined 
enum class D2Version : uint8_t {
	V110f,
	V113c,
	V114d,
	NONE,
	ERR
};

//user defined
enum class ItemQualityLevel : uint8_t {
	UNKNOWN = 0xff,
	NORMAL = 0,
	EXCEPTIONAL = 1,
	ELITE = 2
};

enum class ItemType : uint16_t {
	NONE_1 = 0,
	NONE_2,
	SHIELD,
	ARMOR,
	GOLD,
	BOW_QUIVER,
	CROSSBOW_QUIVER,
	PLAYER_BODY_PART,
	HERB,
	POTION,
	RING,
	ELIXIR,
	AMULET,
	CHARM,
	NONE_3,
	BOOTS,
	GLOVES,
	NONE_4,
	BOOK,
	BELT,
	GEM,
	TORCH,
	SCROLL,
	NONE_5,
	SCEPTER,
	WAND,
	STAFF,
	BOW,
	AXE,
	CLUB,
	SWORD,
	HAMMER,
	KNIFE,
	SPEAR,
	POLEARM,
	CROSSBOW,
	MACE,
	HELM,
	MISSILE_POTION,
	QUEST,
	BODY_PART,
	KEY,
	THROWING_KNIFE,
	THROWING_AXE,
	JAVELIN,
	WEAPON,
	MELEE_WEAPON,
	MISSILE_WEAPON,
	THROWN_WEAPON,
	COMBO_WEAPON,
	ANY_ARMOR,
	ANY_SHIELD,
	MISCELLANEOUS,
	SOCKET_FILLER,
	SECOND_HAND,
	STAVES_AND_RODS,
	MISSILE,
	BLUNT,
	JEWEL,
	CLASS_SPECIFIC,
	AMAZON_ITEM,
	BARBARIAN_ITEM,
	NECROMANCER_ITEM,
	PALADIN_ITEM,
	SORCERESS_ITEM,
	ASSASSIN_ITEM,
	DRUID_ITEM,
	HAND_TO_HAND,
	ORB,
	VOODOO_HEADS,
	AURIC_SHIELDS,
	PRIMAL_HELM,
	PELT,
	CLOAK,
	RUNE,
	CIRCLET,
	HEALING_POTION,
	MANA_POTION,
	REJUV_POTION,
	STAMINA_POTION,
	ANTIDOTE_POTION,
	THAWING_POTION,
	SMALL_CHARM,
	MEDIUM_CHARM,
	LARGE_CHARM,
	AMAZON_BOW,
	AMAZON_SPEAR,
	AMAZON_JAVELIN,
	HAND_TO_HAND_2,
	MAGIC_BOW_QUIV,
	UNK,
	CHIPPED_GEM,
	FLAWED_GEM,
	STANDARD_GEM,
	FLAWLESS_GEM,
	PERFECT_GEM,
	AMETHYST,
	DIAMOND,
	EMERALD,
	RUBY,
	SAPPHIRE,
	TOPAZ,
	SKULL,
	// Own ItemTypes
	TOME,
	CLUESCROLL
};

//0x9c and 0x9d actions
enum class ItemAction : uint8_t {
	NEW_GROUND = 0x00,
	PICK_UP = 0x01,
	DROP = 0x02,
	OLD_GROUND = 0x03,
	TO_STORAGE = 0x04,
	FROM_STORAGE = 0x05,
	EQUIP = 0x06,
	INDIRECT_SWAP_BODY = 0x07,
	UNEQUIP = 0x08,
	SWAP_BODY = 0x09,
	ADD_QUANTITY = 0x0A,
	TO_STORE = 0x0B,
	FROM_STORE = 0x0C,
	SWAP_IN_CONTAINER = 0x0D,
	PLACE_BELT = 0x0E,
	REMOVE_BELT = 0x0F,
	SWAP_BELT = 0x10,
	AUTO_UNEQUIP = 0x11,
	TO_CURSOR = 0x12,
	ITEM_IN_SOCKET = 0x13,
	UPDATE_STATS = 0x15,
	WEAPON_SWITCH = 0x17,
	TOTAL_ITEM_ACTION
};

enum class UnitType : uint32_t {
	PLAYER = 0,
	MONSTER,
	OBJECT,
	MISSILE,
	ITEM,
	TILE,
	TOTAL_UNIT_TYPES
};

enum class PlayerClass : uint32_t {
	AMAZON = 0,
	SORCERESS,
	NECROMANCER,
	PALADIN,
	BARBARIAN,
	DRUID,
	ASSASSIN,
	TOTAL_PLAYER_CLASSES
};

enum class ItemAnimationMode : uint32_t
{
	INVENTORY, 		//Item is in Storage (inventory, cube, Stash?)
	BODY, 		//Item is Equippped
	BELT, 		//Item is in Belt Rows
	GROUND, 	//Item is on Ground
	CURSOR, 	//Item is on Cursor
	DROPPING, 	//Item is Being Dropped
	SOCKET,		//Item is Socketed in another Item
	TOTAL_ITEM_MODES
};

//https://d2mods.info/forum/viewtopic.php?p=487011#p487011
//UnitAny 0xC4
enum class UnitFlag : uint32_t
{
	DOUPDATE = 0x00000001,				//tells to update the unit
	TARGETABLE = 0x00000002,			//whenever the unit can be selected or not
	CANBEATTACKED = 0x00000004,		//whenever the unit can be attacked
	ISVALIDTARGET = 0x00000008,		//used to check if unit is a valid target
	INITSEEDSET = 0x00000010,			//tells whenever the unit seed has been initialized
	DRAWSHADOW = 0x00000020,			//tells whenver to draw a shadow or not (client only)
	SKSRVDOFUNC = 0x00000040,			//set when skill srvdofunc is executed
	OBJPREOPERATE = 0x00000080,		//unknown, used by objects with pre-operate disabled
	HASTXTMSG = 0x00000100,			//whenever this unit has a text message attached to it
	ISMERC = 0x00000200,				//is mercenary unit
	HASEVENTSOUND = 0x00000400,		//does this unit have an event-sound attached to it (server)
	SUMMONER = 0x00000800,				//set for the summoner only
	SENDREFRESHMSG = 0x00001000,		//used by items to send a refresh message when it drops on ground
	ISLINKREFRESHMSG = 0x00002000,		//tells whenever this unit is linked to an update message chain
	SQGFXCHANGE = 0x00004000,			//tells whenever to load new anim for skill SQ
	UPGRLIFENHITCLASS = 0x00008000,	//updates life% and hitclass on client
	ISDEAD = 0x00010000,				//unit is dead
	NOTC = 0x00020000,					//disables treasureclass drops
	MONMODEISCHANGING = 0x00080000,	//set when monmode changes
	PREDRAW = 0x00100000,				//pre-draw this unit (like floor tiles, client only)
	ISASYNC = 0x00200000,				//is async unit (critters)
	ISCLIENTUNIT = 0x00400000,			//is client unit
	ISINIT = 0x01000000,				//set when unit has been initialized
	ISRESURRECT = 0x02000000,			//set for resurrected units and items on floor
	NOXP = 0x04000000,					//no xp gain from killing this unit
	AUTOMAP = 0x10000000,				//automap stuff
	AUTOMAP2 = 0x20000000,				//automap stuff
	PETIGNORE = 0x40000000,			//ignored by pets
	ISREVIVE = 0x80000000				//is revived monster
};

//UnitAny 0xC8
enum class UnitFlagEx : uint32_t
{
	HASINV = 1 << 0,				//unit has inventory attached to it
	UPDATEINV = 1 << 1,			//tells to update inventory content
	ISVENDORITEM = 1 << 2,		//set for vendor shop items
	ISSHAPESHIFTED = 1 << 3,		//unit is shapeshifted
	ITEMINIT = 1 << 4,			//set for items, related to init
	ISINLOS = 1 << 7,			//unit is in client's line of sight
	HASBEENDELETED = 1 << 8,		//unit has been deleted but not free'd yet
	STOREOWNERINFO = 1 << 10,		//unit stores info about owner
	ISCORPSE = 1 << 12,			//unit is a corpse (use ISDEAD instead)
	TELEPORTED = 1 << 16,			//unit has been teleported, needs resync
	STORELASTATTACKER = 1 << 17,	//unit stores info about last attacker
	NODRAW = 1 << 18,				//don't draw this unit
	ISEXPANSION = 1 << 25,		//is expansion unit
	SERVERUNIT = 1 << 26			//is server-side unit
};

enum StatlistFlags : uint32_t
{
	BASE = 0x0,
	BASIC = 0x1,
	NEWLENGTH = 0x2,
	TEMPONLY = 0x4,
	BUFF = 0x8,
	CURSE = 0x20,
	MAGIC = 0x40,
	OVERLAY = 0x80,
	UNK_0x100 = 0x100,
	TOGGLE = 0x200,
	CONVERT = 0x800,
	SET = 0x2000,
	ITEM_EX = 0x200000,
	PERMANENT = 0x20000000,
	DYNAMIC = 0x40000000,
	EXTENDED = 0x80000000,
};

enum ItemFlags : uint32_t
{
	NEWITEM = 0x00000001,
	TARGET = 0x00000002,
	TARGETING = 0x00000004,
	DELETED = 0x00000008,
	IDENTIFIED = 0x00000010,
	QUANTITY = 0x00000020,
	SWITCHIN = 0x00000040,
	SWITCHOUT = 0x00000080,
	BROKEN = 0x00000100,
	REPAIRED = 0x00000200,
	UNK1 = 0x00000400,
	SOCKETED = 0x00000800,
	NOSELL = 0x00001000,
	INSTORE = 0x00002000,
	NOEQUIP = 0x00004000,
	NAMED = 0x00008000,
	ISEAR = 0x00010000,
	STARTITEM = 0x00020000,
	UNK2 = 0x00040000,
	INIT = 0x00080000,
	UNK3 = 0x00100000,
	COMPACTSAVE = 0x00200000,
	ETHEREAL = 0x00400000,
	JUSTSAVED = 0x00800000,
	PERSONALIZED = 0x01000000,
	LOWQUALITY = 0x02000000,
	RUNEWORD = 0x04000000,
	ITEM = 0x08000000
};

static int FONT_HEIGHT[] = { 10, 15, 18, 24, 10, 13, 7, 13, 10, 12, 8, 8, 7, 12 };

//https://user-images.githubusercontent.com/26683324/61428304-67d52380-a8d6-11e9-92ac-4be93dfe67d2.PNG
/*
//Mir Drualga
0 = Formal_8
1 = Exocet_16
2 = DiabloMenu_30
3 = DiabloMenu_42
4 = Formal_10
5 = Formal_12
6 = Formal_6
7 = DiabloMenu_24
8 = FormalWide_11
9 = Exocet_10
10 = Exocet_9
11 = Exocet_8
12 = (same as 6)
13 = Formal_11
*/
enum class Font : int32_t {
	Font8 = 0,
	Font16,			//height = 11, /n spacing + 4px
	Font30,
	Font42,
	FontFormal10,
	FontFormal12,
	Font6,
	Font24,
	FontFormal11,
	FontExocet10,
	FontRidiculuos,
	FontExocet8,
	ReallyTheLastSucker,
	FontInGameChat
};

enum class DrawMode : int32_t {
	TRANS_25 = 0,
	TRANS_50 = 1,
	TRANS_75 = 2,
	MODULATE = 3,
	BURN = 4,
	NORMAL = 5,
	MOD2X_TRANS = 6,
	MOD2X = 7
};

enum class TextColor : int32_t {
	DISABLED = -1,
	WHITE = 0,
	RED,
	GREEN,
	BLUE,
	GOLD,
	GREY,
	BLACK,
	TAN,
	ORANGE,
	YELLOW,
	DARKGREEN,
	PURPLE,
	SILVER = 15
};

enum class ItemRarity : uint32_t {
	NONE = 0x0,
	INFERIOR = 0x1,
	NORMAL = 0x2,
	SUPERIOR = 0x3,
	MAGIC = 0x4,
	SET = 0x5,
	RARE = 0x6,
	UNIQUE = 0x7,
	CRAFT = 0x8
};

enum class Stat : int  {
	INVALID = -1,
	STRENGTH = 0, 					// 000
	ENERGY, 						// 001
	DEXTERITY, 						// 002
	VITALITY, 						// 003
	STATPTS, 						// 004
	SKILLPTS, 						// 005
	HITPOINTS, 						// 006
	MAXHP, 							// 007
	MANA, 							// 008
	MAXMANA, 						// 009
	STAMINA, 						// 00A
	MAXSTAMINA, 					// 00B
	LEVEL, 							// 00C
	EXPERIENCE, 					// 00D
	GOLD, 							// 00E
	GOLDBANK, 						// 00F
	ITEM_ARMOR_PERCENT, 			// 010
	ITEM_MAXDAMAGE_PERCENT, 		// 011
	ITEM_MINDAMAGE_PERCENT, 		// 012
	TOHIT,
	TOBLOCK,
	MINDAMAGE,
	MAXDAMAGE,
	SECONDARY_MINDAMAGE,
	SECONDARY_MAXDAMAGE,
	DAMAGEPERCENT,
	MANARECOVERY,
	MANARECOVERYBONUS,
	STAMINARECOVERYBONUS,
	LASTEXP,
	NEXTEXP,
	ARMORCLASS,
	ARMORCLASS_VS_MISSILE,
	ARMORCLASS_VS_HTH,
	NORMAL_DAMAGE_REDUCTION,
	MAGIC_DAMAGE_REDUCTION,
	DAMAGERESIST,
	MAGICRESIST,
	MAXMAGICRESIST,
	FIRERESIST,
	MAXFIRERESIST,
	LIGHTRESIST,
	MAXLIGHTRESIST,
	COLDRESIST,
	MAXCOLDRESIST,
	POISONRESIST,
	MAXPOISONRESIST,
	DAMAGEAURA,
	FIREMINDAM,
	FIREMAXDAM,
	LIGHTMINDAM,
	LIGHTMAXDAM,
	MAGICMINDAM,
	MAGICMAXDAM,
	COLDMINDAM,
	COLDMAXDAM,
	COLDLENGTH,
	POISONMINDAM,
	POISONMAXDAM,
	POISONLENGTH,
	LIFEDRAINMINDAM,
	LIFEDRAINMAXDAM,
	MANADRAINMINDAM,
	MANADRAINMAXDAM,
	STAMDRAINMINDAM,
	STAMDRAINMAXDAM,
	STUNLENGTH,
	VELOCITYPERCENT,
	ATTACKRATE,
	OTHER_ANIMRATE,
	QUANTITY,
	VALUE,
	DURABILITY,
	MAXDURABILITY,
	HPREGEN,
	ITEM_MAXDURABILITY_PERCENT,
	ITEM_MAXHP_PERCENT,
	ITEM_MAXMANA_PERCENT,
	ITEM_ATTACKERTAKESDAMAGE,
	ITEM_GOLDBONUS,
	ITEM_MAGICBONUS,
	ITEM_KNOCKBACK,
	ITEM_TIMEDURATION,
	ITEM_ADDCLASSSKILLS,
	UNSENTPARAM1,
	ITEM_ADDEXPERIENCE,
	ITEM_HEALAFTERKILL,
	ITEM_REDUCEDPRICES,
	ITEM_DOUBLEHERBDURATION,
	ITEM_LIGHTRADIUS,
	ITEM_LIGHTCOLOR,
	ITEM_REQ_PERCENT,
	ITEM_LEVELREQ,
	ITEM_FASTERATTACKRATE,
	ITEM_LEVELREQPCT,
	LASTBLOCKFRAME,
	ITEM_FASTERMOVEVELOCITY,
	ITEM_NONCLASSSKILL,
	STATE,
	ITEM_FASTERGETHITRATE,
	MONSTER_PLAYERCOUNT,
	SKILL_POISON_OVERRIDE_LENGTH,
	ITEM_FASTERBLOCKRATE,
	SKILL_BYPASS_UNDEAD,
	SKILL_BYPASS_DEMONS,
	ITEM_FASTERCASTRATE,
	SKILL_BYPASS_BEASTS,
	ITEM_SINGLESKILL,
	ITEM_RESTINPEACE,
	CURSE_RESISTANCE,
	ITEM_POISONLENGTHRESIST,
	ITEM_NORMALDAMAGE,
	ITEM_HOWL,
	ITEM_STUPIDITY,
	ITEM_DAMAGETOMANA,
	ITEM_IGNORETARGETAC,
	ITEM_FRACTIONALTARGETAC,
	ITEM_PREVENTHEAL,
	ITEM_HALFFREEZEDURATION,
	ITEM_TOHIT_PERCENT,
	ITEM_DAMAGETARGETAC,
	ITEM_DEMONDAMAGE_PERCENT,
	ITEM_UNDEADDAMAGE_PERCENT,
	ITEM_DEMON_TOHIT,
	ITEM_UNDEAD_TOHIT,
	ITEM_THROWABLE,
	ITEM_ELEMSKILL,
	ITEM_ALLSKILLS,
	ITEM_ATTACKERTAKESLIGHTDAMAGE,
	IRONMAIDEN_LEVEL,
	LIFETAP_LEVEL,
	THORNS_PERCENT,
	BONEARMOR,
	BONEARMORMAX,
	ITEM_FREEZE,
	ITEM_OPENWOUNDS,
	ITEM_CRUSHINGBLOW,
	ITEM_KICKDAMAGE,
	ITEM_MANAAFTERKILL,
	ITEM_HEALAFTERDEMONKILL,
	ITEM_EXTRABLOOD,
	ITEM_DEADLYSTRIKE,
	ITEM_ABSORBFIRE_PERCENT,
	ITEM_ABSORBFIRE,
	ITEM_ABSORBLIGHT_PERCENT,
	ITEM_ABSORBLIGHT,
	ITEM_ABSORBMAGIC_PERCENT,
	ITEM_ABSORBMAGIC,
	ITEM_ABSORBCOLD_PERCENT,
	ITEM_ABSORBCOLD,
	ITEM_SLOW,
	ITEM_AURA,
	ITEM_INDESCTRUCTIBLE,
	ITEM_CANNOTBEFROZEN,
	ITEM_STAMINADRAINPCT,
	ITEM_REANIMATE,
	ITEM_PIERCE,
	ITEM_MAGICARROW,
	ITEM_EXPLOSIVEARROW,
	ITEM_THROW_MINDAMAGE,
	ITEM_THROW_MAXDAMAGE,
	SKILL_HANDOFATHENA,
	SKILL_STAMINAPERCENT,
	SKILL_PASSIVE_STAMINAPERCENT,
	SKILL_CONCENTRATION,
	SKILL_ENCHANT,
	SKILL_PIERCE,
	SKILL_CONVICTION,
	SKILL_CHILLINGARMOR,
	SKILL_FRENZY,
	SKILL_DECREPIFY,
	SKILL_ARMOR_PERCENT,
	ALIGNMENT,
	TARGET0,
	TARGET1,
	GOLDLOST,
	CONVERSION_LEVEL,
	CONVERSION_MAXHP,
	UNIT_DOOVERLAY,
	ATTACK_VS_MONTYPE,
	DAMAGE_VS_MONTYPE,
	FADE,
	ARMOR_OVERRIDE_PERCENT,
	UNUSED183,
	UNUSED184,
	UNUSED185,
	UNUSED186,
	UNUSED187,
	ITEM_ADDSKILL_TAB,
	UNUSED189,
	UNUSED190,
	UNUSED191,
	UNUSED192,
	UNUSED193,
	ITEM_NUMSOCKETS,
	ITEM_SKILLONATTACK,
	ITEM_SKILLONKILL,
	ITEM_SKILLONDEATH,
	ITEM_SKILLONHIT,
	ITEM_SKILLONLEVELUP,
	UNUSED200,
	ITEM_SKILLONGETHIT,
	UNUSED202,
	UNUSED203,
	ITEM_CHARGED_SKILL,
	UNUSED204,
	UNUSED205,
	UNUSED206,
	UNUSED207,
	UNUSED208,
	UNUSED209,
	UNUSED210,
	UNUSED211,
	UNUSED212,
	ITEM_ARMOR_PERLEVEL,
	ITEM_ARMORPERCENT_PERLEVEL,
	ITEM_HP_PERLEVEL,
	ITEM_MANA_PERLEVEL,
	ITEM_MAXDAMAGE_PERLEVEL,
	ITEM_MAXDAMAGE_PERCENT_PERLEVEL,
	ITEM_STRENGTH_PERLEVEL,
	ITEM_DEXTERITY_PERLEVEL,
	ITEM_ENERGY_PERLEVEL,
	ITEM_VITALITY_PERLEVEL,
	ITEM_TOHIT_PERLEVEL,
	ITEM_TOHITPERCENT_PERLEVEL,
	ITEM_COLD_DAMAGEMAX_PERLEVEL,
	ITEM_FIRE_DAMAGEMAX_PERLEVEL,
	ITEM_LTNG_DAMAGEMAX_PERLEVEL,
	ITEM_POIS_DAMAGEMAX_PERLEVEL,
	ITEM_RESIST_COLD_PERLEVEL,
	ITEM_RESIST_FIRE_PERLEVEL,
	ITEM_RESIST_LTNG_PERLEVEL,
	ITEM_RESIST_POIS_PERLEVEL,
	ITEM_ABSORB_COLD_PERLEVEL,
	ITEM_ABSORB_FIRE_PERLEVEL,
	ITEM_ABSORB_LTNG_PERLEVEL,
	ITEM_ABSORB_POIS_PERLEVEL,
	ITEM_THORNS_PERLEVEL,
	ITEM_FIND_GOLD_PERLEVEL,
	ITEM_FIND_MAGIC_PERLEVEL,
	ITEM_REGENSTAMINA_PERLEVEL,
	ITEM_STAMINA_PERLEVEL,
	ITEM_DAMAGE_DEMON_PERLEVEL,
	ITEM_DAMAGE_UNDEAD_PERLEVEL,
	ITEM_TOHIT_DEMON_PERLEVEL,
	ITEM_TOHIT_UNDEAD_PERLEVEL,
	ITEM_CRUSHINGBLOW_PERLEVEL,
	ITEM_OPENWOUNDS_PERLEVEL,
	ITEM_KICK_DAMAGE_PERLEVEL,
	ITEM_DEADLYSTRIKE_PERLEVEL,
	ITEM_FIND_GEMS_PERLEVEL,
	ITEM_REPLENISH_DURABILITY,
	ITEM_REPLENISH_QUANTITY,
	ITEM_EXTRA_STACK,
	ITEM_FIND_ITEM,
	ITEM_SLASH_DAMAGE,
	ITEM_SLASH_DAMAGE_PERCENT,
	ITEM_CRUSH_DAMAGE,
	ITEM_CRUSH_DAMAGE_PERCENT,
	ITEM_THRUST_DAMAGE,
	ITEM_THRUST_DAMAGE_PERCENT,
	ITEM_ABSORB_SLASH,
	ITEM_ABSORB_CRUSH,
	ITEM_ABSORB_THRUST,
	ITEM_ABSORB_SLASH_PERCENT,
	ITEM_ABSORB_CRUSH_PERCENT,
	ITEM_ABSORB_THRUST_PERCENT,
	ITEM_ARMOR_BYTIME,
	ITEM_ARMORPERCENT_BYTIME,
	ITEM_HP_BYTIME,
	ITEM_MANA_BYTIME,
	ITEM_MAXDAMAGE_BYTIME,
	ITEM_MAXDAMAGE_PERCENT_BYTIME,
	ITEM_STRENGTH_BYTIME,
	ITEM_DEXTERITY_BYTIME,
	ITEM_ENERGY_BYTIME,
	ITEM_VITALITY_BYTIME,
	ITEM_TOHIT_BYTIME,
	ITEM_TOHITPERCENT_BYTIME,
	ITEM_COLD_DAMAGEMAX_BYTIME,
	ITEM_FIRE_DAMAGEMAX_BYTIME,
	ITEM_LTNG_DAMAGEMAX_BYTIME,
	ITEM_POIS_DAMAGEMAX_BYTIME,
	ITEM_RESIST_COLD_BYTIME,
	ITEM_RESIST_FIRE_BYTIME,
	ITEM_RESIST_LTNG_BYTIME,
	ITEM_RESIST_POIS_BYTIME,
	ITEM_ABSORB_COLD_BYTIME,
	ITEM_ABSORB_FIRE_BYTIME,
	ITEM_ABSORB_LTNG_BYTIME,
	ITEM_ABSORB_POIS_BYTIME,
	ITEM_FIND_GOLD_BYTIME,
	ITEM_FIND_MAGIC_BYTIME,
	ITEM_REGENSTAMINA_BYTIME,
	ITEM_STAMINA_BYTIME,
	ITEM_DAMAGE_DEMON_BYTIME,
	ITEM_DAMAGE_UNDEAD_BYTIME,
	ITEM_TOHIT_DEMON_BYTIME,
	ITEM_TOHIT_UNDEAD_BYTIME,
	ITEM_CRUSHINGBLOW_BYTIME,
	ITEM_OPENWOUNDS_BYTIME,
	ITEM_KICK_DAMAGE_BYTIME,
	ITEM_DEADLYSTRIKE_BYTIME,
	ITEM_FIND_GEMS_BYTIME,
	ITEM_PIERCE_COLD,
	ITEM_PIERCE_FIRE,
	ITEM_PIERCE_LTNG,
	ITEM_PIERCE_POIS,
	ITEM_DAMAGE_VS_MONSTER,
	ITEM_DAMAGE_PERCENT_VS_MONSTER,
	ITEM_TOHIT_VS_MONSTER,
	ITEM_TOHIT_PERCENT_VS_MONSTER,
	ITEM_AC_VS_MONSTER,
	ITEM_AC_PERCENT_VS_MONSTER,
	FIRELENGTH,
	BURNINGMIN,
	BURNINGMAX,
	PROGRESSIVE_DAMAGE,
	PROGRESSIVE_STEAL,
	PROGRESSIVE_OTHER,
	PROGRESSIVE_FIRE,
	PROGRESSIVE_COLD,
	PROGRESSIVE_LIGHTNING,
	ITEM_EXTRA_CHARGES,
	PROGRESSIVE_TOHIT,
	POISON_COUNT,
	DAMAGE_FRAMERATE,
	PIERCE_IDX,
	PASSIVE_FIRE_MASTERY,
	PASSIVE_LTNG_MASTERY,
	PASSIVE_COLD_MASTERY,
	PASSIVE_POIS_MASTERY,
	PASSIVE_FIRE_PIERCE,
	PASSIVE_LTNG_PIERCE,
	PASSIVE_COLD_PIERCE,
	PASSIVE_POIS_PIERCE,
	PASSIVE_CRITICAL_STRIKE,
	PASSIVE_DODGE,
	PASSIVE_AVOID,
	PASSIVE_EVADE,
	PASSIVE_WARMTH,
	PASSIVE_MASTERY_MELEE_TH,
	PASSIVE_MASTERY_MELEE_DMG,
	PASSIVE_MASTERY_MELEE_CRIT,
	PASSIVE_MASTERY_THROW_TH,
	PASSIVE_MASTERY_THROW_DMG,
	PASSIVE_MASTERY_THROW_CRIT,
	PASSIVE_WEAPONBLOCK,
	PASSIVE_SUMMON_RESIST,
	MODIFIERLIST_SKILL,
	MODIFIERLIST_LEVEL,
	LAST_SENT_HP_PCT,
	SOURCE_UNIT_TYPE,
	SOURCE_UNIT_ID,
	SHORTPARAM1,
	QUESTITEMDIFFICULTY,
	PASSIVE_MAG_MASTERY,
	PASSIVE_MAG_PIERCE,
};